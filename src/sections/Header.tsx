import { useState } from "react";
import { motion } from "framer-motion";
import { VscMenu } from "react-icons/vsc";
import { menu } from "../assets/contants";

const Header = () => {
  const [isMenuOpen, setMenuOpen] = useState(false);

  return (
    <motion.header
      initial={{ y: -50, opacity: 0 }}
      animate={{ y: 0, opacity: 1 }}
      transition={{ duration: 0.8, ease: "easeOut" }}
      className="flex w-full py-4 z-50"
    >
      <nav className="w-full">
        <ul className="flex flex-row relative items-center justify-between w-full md:px-10 px-5">
          {/* Logo */}
          <motion.li
            className="flex flex-row gap-3 items-center"
            whileHover={{ scale: 1.1 }}
            transition={{ type: "spring", stiffness: 300 }}
          >
            <a
              href="/"
              className="lg:text-3xl text-2xl font-extrabold tracking-wide"
            >
              NM.
            </a>
            <button
              className="lg:hidden block"
              onClick={() => setMenuOpen((prev) => !prev)}
            >
              <VscMenu size={30} />
            </button>
          </motion.li>

          {/* Navigation links */}
          <motion.li
            className="lg:flex flex-row md:gap-5 gap-3 hidden lg:text-lg text-xs font-bold"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.4, duration: 0.5 }}
          >
            {menu.map((item) => (
              <motion.a
                key={item.label}
                href={item.url}
                className="relative group h-7 transition-all uppercase duration-300"
              >
                {item.label}.
                <span className="block h-0.5 w-0 bg-black group-hover:w-full transition-all duration-300"></span>
              </motion.a>
            ))}
          </motion.li>

          {/* Mobile Menu */}
          {isMenuOpen && (
            <motion.div
              className="lg:hidden absolute top-16 left-0 right-0 bg-white shadow-lg p-4 rounded-lg"
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5 }}
            >
              <ul className="flex flex-col gap-3">
                {menu.map((item) => (
                  <li key={item.label} className="text-lg font-bold">
                    <a href={item.url}>{item.label}</a>
                  </li>
                ))}
              </ul>
            </motion.div>
          )}

          {/* Dark Mode Switch */}
          <motion.button
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.4, duration: 0.5 }}
            className="absolute top-1 hover:cursor-pointer -right-5 lg:-right-32 w-20 h-20"
          >
            <figure className="w-20 h-20">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                x="0px"
                y="0px"
                width="25"
                height="25"
                viewBox="0 0 30 30"
              >
                <path d="M 15 2 C 14.448 2 14 2.448 14 3 L 14 3.171875 C 14 3.649875 13.663406 4.0763437 13.191406 4.1523438 C 12.962406 4.1893437 12.735719 4.2322031 12.511719 4.2832031 C 12.047719 4.3892031 11.578484 4.1265 11.396484 3.6875 L 11.330078 3.53125 C 11.119078 3.02125 10.534437 2.7782344 10.023438 2.9902344 C 9.5134375 3.2012344 9.2704219 3.785875 9.4824219 4.296875 L 9.5488281 4.4570312 C 9.7328281 4.8970313 9.5856875 5.4179219 9.1796875 5.6699219 C 8.9836875 5.7919219 8.7924688 5.9197344 8.6054688 6.0527344 C 8.2174688 6.3297344 7.68075 6.2666875 7.34375 5.9296875 L 7.2226562 5.8085938 C 6.8316562 5.4175937 6.1985937 5.4175938 5.8085938 5.8085938 C 5.4185938 6.1995938 5.4185938 6.8326563 5.8085938 7.2226562 L 5.9296875 7.34375 C 6.2666875 7.68075 6.3297344 8.2164688 6.0527344 8.6054688 C 5.9197344 8.7924687 5.7919219 8.9836875 5.6699219 9.1796875 C 5.4179219 9.5856875 4.8960781 9.7337812 4.4550781 9.5507812 L 4.296875 9.484375 C 3.786875 9.273375 3.2002813 9.5153906 2.9882812 10.025391 C 2.7772813 10.535391 3.0192969 11.120031 3.5292969 11.332031 L 3.6855469 11.396484 C 4.1245469 11.578484 4.3892031 12.047719 4.2832031 12.511719 C 4.2322031 12.735719 4.1873906 12.962406 4.1503906 13.191406 C 4.0753906 13.662406 3.649875 14 3.171875 14 L 3 14 C 2.448 14 2 14.448 2 15 C 2 15.552 2.448 16 3 16 L 3.171875 16 C 3.649875 16 4.0763437 16.336594 4.1523438 16.808594 C 4.1893437 17.037594 4.2322031 17.264281 4.2832031 17.488281 C 4.3892031 17.952281 4.1265 18.421516 3.6875 18.603516 L 3.53125 18.669922 C 3.02125 18.880922 2.7782344 19.465563 2.9902344 19.976562 C 3.2012344 20.486563 3.785875 20.729578 4.296875 20.517578 L 4.4570312 20.451172 C 4.8980312 20.268172 5.418875 20.415312 5.671875 20.820312 C 5.793875 21.016313 5.9206875 21.208484 6.0546875 21.396484 C 6.3316875 21.784484 6.2686406 22.321203 5.9316406 22.658203 L 5.8085938 22.779297 C 5.4175937 23.170297 5.4175938 23.803359 5.8085938 24.193359 C 6.1995938 24.583359 6.8326562 24.584359 7.2226562 24.193359 L 7.3457031 24.072266 C 7.6827031 23.735266 8.2174688 23.670266 8.6054688 23.947266 C 8.7934688 24.081266 8.9856406 24.210031 9.1816406 24.332031 C 9.5866406 24.584031 9.7357344 25.105875 9.5527344 25.546875 L 9.4863281 25.705078 C 9.2753281 26.215078 9.5173438 26.801672 10.027344 27.013672 C 10.537344 27.224672 11.121984 26.982656 11.333984 26.472656 L 11.398438 26.316406 C 11.580438 25.877406 12.049672 25.61275 12.513672 25.71875 C 12.737672 25.76975 12.964359 25.814562 13.193359 25.851562 C 13.662359 25.924562 14 26.350125 14 26.828125 L 14 27 C 14 27.552 14.448 28 15 28 C 15.552 28 16 27.552 16 27 L 16 26.828125 C 16 26.350125 16.336594 25.923656 16.808594 25.847656 C 17.037594 25.810656 17.264281 25.767797 17.488281 25.716797 C 17.952281 25.610797 18.421516 25.8735 18.603516 26.3125 L 18.669922 26.46875 C 18.880922 26.97875 19.465563 27.221234 19.976562 27.009234 C 20.486563 26.798234 20.729578 26.213593 20.517578 25.702593 L 20.451172 25.541406 C 20.268172 25.100406 20.415312 24.580531 20.820312 24.327531 C 21.016313 24.209531 21.208484 24.081719 21.396484 23.947719 C 21.784484 23.670719 22.321203 23.733766 22.658203 24.070766 L 22.779297 24.193359 C 23.170297 24.584359 23.803359 24.584359 24.193359 24.193359 C 24.583359 23.803359 24.584359 23.170297 24.193359 22.779297 L 24.072266 22.658203 C 23.735266 22.321203 23.670266 21.784484 23.947266 21.396484 C 24.081266 21.208484 24.210031 21.016313 24.332031 20.820312 C 24.584031 20.415312 24.735734 19.895469 24.552734 19.354469 L 24.486328 19.196777 C 24.275328 18.686777 24.517343 18.100172 25.027344 17.888672 C 25.537344 17.677672 26.121984 17.919688 26.333984 18.429688 C 26.472656 18.869688 26.803359 19.217234 27.215359 19.354469 C 27.679359 19.496469 28.140625 19.380125 28.416625 18.987234 C 28.650625 18.669234 28.635 18.218672 28.250625 17.994672 C 27.814375 17.750875 27.322953 17.482281 26.881797 17.352828 C 26.388953 17.206078 25.902359 17.491297 25.695953 17.980797 C 25.4853906 18.474312 25.7145 19.0184 26.160843 19.25528 C 26.368297 19.361672 26.606625 19.332031 26.807844 19.179688 L 26.858859 19.110227z"></path>
              </svg>
            </figure>
          </motion.button>
        </ul>
      </nav>
    </motion.header>
  );
};

export default Header;
